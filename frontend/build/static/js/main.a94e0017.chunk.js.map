{"version":3,"sources":["Redux/Actions/LoginActionType.js","Redux/Reducers/LoginReducer.js","Redux/Actions/SocketActionType.js","Redux/Reducers/SocketReducer.js","Redux/Reducers/RootReducer.js","Redux/Store.js","Redux/Constants.js","Redux/Actions/LoginAction.js","Login.js","Navigation.js","ChatNavigation.js","Main.js","Redux/Actions/SocketAction.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","LOGOUT","loginAction","username","password","type","initialState","SET_SOCKET_INSTANCE","setSocketInstanceAction","socketInstance","appReducer","combineReducers","login","state","arguments","length","undefined","action","Object","assign","socket","rootReducer","store","createStore","applyMiddleware","thunk","logger","BASE_URL","body","axios","method","url","data","then","response","console","log","catch","error","handleLogin","dispatch","Login","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","react_default","a","createElement","index_es","container","spacing","direction","alignItems","justify","style","minHeight","flex","padding","variant","id","label","autoComplete","margin","onChange","event","setState","target","value","justifyContent","alignContent","flexDirection","Link","to","size","color","marginTop","alignSelf","onClick","onLoginButtonPressed","Component","withRouter","connect","Navigation","anchorProfileMenu","anchorChatUserMenu","currentTarget","actionType","send","JSON","stringify","history","push","renderProfileMenu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","profileMenuHandleClose","onProfileClicked","onLogOutClicked","position","display","aria-owns","aria-haspopup","profileMenuHandleOpen","AccountCircle_default","ChatNavigation","tabIndex","react","disableRipple","Main","chatMessages","message","chatRoom","location","userList","setUpConnection","updateUserList","joinChatRoom","self","loc","window","wsStart","protocol","endpoint","host","pathname","WebSocket","onmessage","e","onMessageReceived","onopen","onclose","onerror","setSocketInstance","parse","populateMessage","Exception","array","sender","messageDiv","scrollIntoView","behavior","listItems","map","textTransform","primary","chatUserMenuOpenHandler","MoreVert_default","socketSend","_this3","renderChatUserMenu","chatUserMenuCloseHandler","src_Navigation","leaveRoom","Styles","leftPane","component","populateLeftPanel","rightPane","overflowY","height","messages","key","selfSender","borderRadius","marginBottom","backgroundColor","ref","el","placeholder","onKeyPress","ev","sendMessage","preventDefault","src_ChatNavigation","clientRequest","Home","chatRoomList","renderChatRoomList","App","es","BrowserRouter","Switch","Route","path","exact","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a94e0017.chunk.js","sourcesContent":["export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const loginAction = (username,password) => {\n    return {\n        type: LOGIN,\n        username: username,\n        password:password\n    };\n};\n\nexport const logOutAction = () => {\n    return {\n        type: LOGOUT,\n    };\n};","import {\n    LOGIN, LOGOUT\n} from \"../Actions/LoginActionType\";\n\nconst initialState = {\n    username: '',\n    password: ''\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN:\n            return Object.assign({}, state, {\n                username: action.username,\n                password: action.password\n            });\n            break;\n\n        case LOGOUT:\n            return Object.assign({}, state, {\n                username: ''\n            });\n            break;\n\n        default:\n            return state;\n    }\n}\n","export const SET_SOCKET_INSTANCE = \"SET_SOCKET_INSTANCE\";\n\n\nexport const setSocketInstanceAction = (socketInstance) => {\n    return {\n        type: SET_SOCKET_INSTANCE,\n        socketInstance: socketInstance,\n    };\n};\n\n\n","import {\n    SET_SOCKET_INSTANCE\n} from \"../Actions/SocketActionType\";\n\nconst initialState = {\n    socketInstance: {}\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_SOCKET_INSTANCE:\n            return Object.assign({}, state, {\n                socketInstance: action.socketInstance\n            });\n            break;\n\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from \"redux\";\nimport loginReducer from \"./LoginReducer\";\nimport socketReducer from \"./SocketReducer\";\n\nconst appReducer = combineReducers({\n    login: loginReducer,\n    socket: socketReducer\n\n});\n\nconst rootReducer = (state, action) => {\n    return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import {createStore, applyMiddleware} from \"redux\";\n\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./Reducers/RootReducer\";\n\n\nlet store;\n\nstore = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nexport default store;\n","// export const BASE_URL = \"http://localhost:8000\"\nexport const BASE_URL = \"https://pujan-python.herokuapp.com\"","import {loginAction, logOutAction} from './LoginActionType'\nimport axios from 'axios';\nimport {BASE_URL} from '../Constants'\n\n\nexport function login(username, password) {\n    handleLogin(username, password);\n    return dispatch => {\n        dispatch(loginAction(username,password));\n    };\n}\n\nexport function logOut(username) {\n    handleLogOut(username);\n    return dispatch => {\n        dispatch(logOutAction(username));\n    };\n}\n\nfunction handleLogin(username, password) {\n    let body = {\n        username: username,\n        password: password\n    }\n\n    axios({\n        method: 'POST',\n        url: BASE_URL + '/login',\n        data: body\n    }).then(function (response) {\n        console.log(response)\n\n    }).catch(function (error) {\n        console.log(error);\n    }).then(function () {\n    });\n\n}\n\nfunction handleLogOut(username) {\n    let body = {\n        username: username\n    }\n    axios({\n        method: 'POST',\n        url: BASE_URL + '/logout',\n        data: body\n    }).then(function (response) {\n        console.log(response)\n\n    }).catch(function (error) {\n        console.log(error);\n    }).then(function () {\n    });\n\n}","import React, {Component} from \"react\";\nimport {Grid, Paper, TextField, Typography, Button} from \"@material-ui/core\"\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {login} from \"./Redux/Actions/LoginAction\";\nimport {withRouter} from \"react-router-dom\"\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    render() {\n        return (\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{minHeight: '100vh'}}\n                flex={1}\n\n            >\n\n                <Paper style={{padding: 50}}>\n                    <Typography variant={\"h6\"}>Please login</Typography>\n                    <Grid container direction=\"column\">\n                        <Grid>\n                            <TextField\n                                id=\"outlined-username-input\"\n                                label=\"Username\"\n                                autoComplete=\"current-password\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={(event) => {\n                                    this.setState({\n                                        username: event.target.value\n                                    })\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid>\n                            <TextField\n                                id=\"outlined-password-input\"\n                                label=\"Password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                onChange={(event) => {\n                                    this.setState({\n                                        password: event.target.value\n                                    })\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid style={{\n                        justifyContent: 'flex-end',\n                        alignItems: 'flex-end',\n                        alignContent: 'flex-end',\n                        flex: 1,\n                        flexDirection: \"row\"\n                    }}>\n                        <div style={{flex: 1}}/>\n                        <Link to=\"/home\">\n                            <Button\n                                variant=\"contained\"\n                                size=\"large\" color=\"primary\"\n                                style={{marginTop: 20, alignSelf: 'flex-end'}}\n                                onClick={() => this.onLoginButtonPressed()}\n                            >\n                                Login\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Paper>\n            </Grid>\n\n        )\n    }\n\n    onLoginButtonPressed() {\n        this.props.login(this.state.username, this.state.password)\n    }\n};\n\nconst mapStateToProps = state => {\n    return {}\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (username, password) => dispatch(login(username, password)),\n\n    };\n};\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login));\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\"\nimport {MenuItem, Menu, AppBar, Toolbar, Typography, IconButton} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {withRouter} from \"react-router-dom\"\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            anchorProfileMenu: null,\n            anchorChatUserMenu: null,\n\n        }\n    }\n\n    profileMenuHandleClose() {\n        this.setState({\n            anchorProfileMenu: null\n        });\n\n    }\n\n    profileMenuHandleOpen(event) {\n        this.setState({\n            anchorProfileMenu: event.currentTarget\n        });\n    }\n\n    onProfileClicked() {\n        //TODO Redirect to User Profile\n    }\n\n    onLogOutClicked() {\n        let data = {\n            actionType: \"logout\",\n            username: this.props.username\n        }\n        console.log(data)\n        this.props.socket.send(JSON.stringify(data))\n\n        this.props.history.push('/')\n    }\n\n\n    render() {\n        const renderProfileMenu = (\n            <Menu\n                anchorEl={this.state.anchorProfileMenu}\n                anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n                transformOrigin={{vertical: 'top', horizontal: 'right'}}\n                open={Boolean(this.state.anchorProfileMenu)}\n                onClose={() => {\n                    this.profileMenuHandleClose()\n                }}\n            >\n                <MenuItem onClick={() => {\n                    this.onProfileClicked();\n                    this.profileMenuHandleClose()\n                }}>Profile</MenuItem>\n                <MenuItem onClick={() => {\n                    this.onLogOutClicked();\n                    this.profileMenuHandleClose()\n                }}>Log Out</MenuItem>\n            </Menu>\n        )\n\n\n        return <AppBar position=\"static\">\n            <Toolbar style={{display: 'flex'}}>\n                <Typography variant=\"h6\" color=\"inherit\" style={{flex: 1}}>\n                    Django Channel Example\n                </Typography>\n\n                <Typography color=\"inherit\">{this.props.username}</Typography>\n                <IconButton\n                    aria-owns={'material-appbar'}\n                    aria-haspopup=\"true\"\n                    onClick={(event) => {\n                        this.profileMenuHandleOpen(event)\n                    }}\n                    color=\"inherit\"\n                >\n                    <AccountCircle/>\n                </IconButton>\n            </Toolbar>\n            {renderProfileMenu}\n\n        </AppBar>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        username: state.login.username,\n        socket: state.socket.socketInstance\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navigation))","import React, {Component, Fragment} from \"react\";\nimport {connect} from \"react-redux\"\nimport {Tab, Tabs} from '@material-ui/core';\n\nclass ChatNavigation extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            tabIndex: 0\n        }\n    }\n\n    render() {\n        return (<Fragment>\n            <Tabs\n                value={this.state.tabIndex}\n            >\n                <Tab\n                    disableRipple\n                    label=\"Tab 1\"\n                    onClick={() => {\n                        this.setState({tabIndex: 0})\n                    }}\n\n                />\n                <Tab\n                    disableRipple\n                    label=\"Tab 2\"\n                    onClick={() => {\n                        this.setState({tabIndex: 1})\n                    }}\n                />\n                <Tab\n                    disableRipple\n                    label=\"Tab 3\"\n                    onClick={() => {\n                        this.setState({tabIndex: 2})\n                    }}\n                />\n            </Tabs>\n        </Fragment>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatNavigation)","import React, {Component, Fragment} from 'react';\nimport {\n    Typography,\n    Grid,\n    TextField,\n    Button,\n    Paper,\n    List,\n    ListItem,\n    ListItemText,\n    Menu,\n    MenuItem, ListItemIcon,\n} from '@material-ui/core';\nimport {connect} from \"react-redux\";\nimport axios from 'axios';\n\nimport {BASE_URL} from \"./Redux/Constants\";\nimport Navigation from \"./Navigation\"\nimport MoreVert from '@material-ui/icons/MoreVert';\nimport ChatNavigation from './ChatNavigation'\nimport {login} from \"./Redux/Actions/LoginAction\";\nimport {setSocketInstance} from \"./Redux/Actions/SocketAction\"\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorProfileMenu: null,\n            anchorChatUserMenu: null,\n            chatMessages: [],\n            message: '',\n            username: this.props.username,\n            chatRoom: this.props.location.chatRoom,\n            userList: [],\n            tabIndex: 0\n        }\n        this.socket = {}\n        this.setUpConnection();\n        this.updateUserList()\n\n    }\n\n    joinChatRoom() {\n        let self = this\n        let body = {\n            username: this.state.username,\n            chatRoom: this.state.chatRoom\n        }\n        axios({\n            method: 'POST',\n            url: BASE_URL + '/join_room',\n            data: body\n        }).then(function (response) {\n\n        }).catch(function (error) {\n            console.log(error);\n        }).then(function () {\n        });\n    }\n\n    setUpConnection() {\n        this.joinChatRoom();\n        var self = this;\n        let loc = window.location\n        let wsStart = 'ws://'\n        if (loc.protocol === 'https:') {\n            wsStart = 'wss://'\n        }\n\n        let endpoint = wsStart + loc.host + loc.pathname + '/ws/'\n        this.socket = new WebSocket(endpoint + 'chatroom/' + self.state.chatRoom + '/');\n\n        this.socket.onmessage = function (e) {\n            // console.log(\"message\", e);\n            self.onMessageReceived(e.data)\n        }\n        this.socket.onopen = function (e) {\n            console.log(\"open\", e);\n        }\n\n        this.socket.onclose = function (e) {\n            console.log(\"close\", e);\n        }\n\n        this.socket.onerror = function (e) {\n            console.log(\"error\", e);\n        }\n\n        window.socket = this.socket;\n        this.props.setSocketInstance(this.socket);\n\n    }\n\n    updateUserList() {\n        let self = this\n        let body = {\n            chatRoom: this.state.chatRoom\n        }\n        axios({\n            method: 'POST',\n            url: BASE_URL + '/get_chat_room_user_list',\n            data: body\n        }).then(function (response) {\n            self.setState({\n                userList: response.data.userList\n            })\n\n        }).catch(function (error) {\n            console.log(error);\n        }).then(function () {\n        });\n\n\n    }\n\n    onMessageReceived(data) {\n        try {\n            let action = (JSON.parse(data)).actionType;\n            console.log(action)\n            switch (action) {\n                case 'message':\n                    this.populateMessage(data);\n                    break\n\n                case 'updateUserList':\n                    this.updateUserList();\n\n                default:\n                    break;\n            }\n        }\n        catch (Exception) {\n\n        }\n\n    }\n\n    populateMessage(data) {\n        var self = this;\n        let array = this.state.chatMessages;\n        let response = JSON.parse(data)\n        array.push({'sender': response.sender, 'message': response.message});\n        this.setState({\n            chatMessages: array\n        })\n        self.messageDiv.scrollIntoView({behavior: \"smooth\"});\n\n    }\n\n\n    componentDidMount() {\n\n\n    }\n\n\n    populateLeftPanel() {\n        var listItems = [];\n        this.state.userList.map((data) => {\n            listItems.push(\n                <ListItem style={{display: 'flex', flex: 1, flexDirection: 'vertical'}}>\n                    <Button style={{display: 'flex', flex: 1, justifyContent: 'flex-start', textTransform: 'none'}}>\n                        <ListItemText\n                            primary={data.username} style={{display: 'flex', flex: 1, justifyContent: 'flex-start'}}/>\n                    </Button>\n\n                    <Button\n                        onClick={(event) => {\n                            this.chatUserMenuOpenHandler(event)\n\n                        }}\n                        style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <ListItemIcon>\n                            <MoreVert/>\n                        </ListItemIcon>\n\n                    </Button>\n\n                </ListItem>\n            )\n        })\n        return listItems\n    }\n\n\n    chatUserMenuOpenHandler(event) {\n        this.setState({\n            anchorChatUserMenu: event.currentTarget\n        })\n\n    }\n\n    chatUserMenuCloseHandler() {\n        this.setState({\n            anchorChatUserMenu: null\n        })\n    }\n\n\n    socketSend(data) {\n        this.socket.send(data)\n    }\n\n    leaveRoom() {\n        let data = {\n            actionType: \"leaveRoom\",\n            username: this.state.username,\n            chatRoom: this.state.chatRoom\n        }\n        this.socketSend(JSON.stringify(data))\n\n        this.props.history.push('/home')\n    }\n\n    render() {\n        const PopulateMessages = () => {\n            var messages = []\n            this.state.chatMessages.map(key => {\n                // for (var i = 0; i < 20; i++) {\n                var selfSender = this.state.username == key.sender\n                messages.push(\n                    <div style={{\n                        display: 'flex',\n                        borderRadius: 5,\n                        padding: 5,\n                        marginBottom: 4,\n                        justifyContent: selfSender ? 'flex-end' : 'flex-start'\n\n                    }}>\n                        <Paper style={{\n                            backgroundColor: selfSender ? '#E5E5EA' : '#52C2F9',\n                            padding: 10,\n                            borderRadius: 15\n                        }}>\n                            <Typography style={{\n                                color: selfSender ? 'black' : 'white',\n                            }}>{key.message}</Typography>\n                        </Paper>\n                        <div style={{marginBottom: 5}}></div>\n                    </div>\n                );\n\n            })\n\n            return messages;\n\n        }\n\n        const renderChatUserMenu = (\n            <Menu\n                anchorEl={this.state.anchorChatUserMenu}\n                anchorOrigin={{vertical: 'top', horizontal: 'left'}}\n                transformOrigin={{vertical: 'top', horizontal: 'left'}}\n                open={Boolean(this.state.anchorChatUserMenu)}\n                onClose={() => {\n                    this.chatUserMenuCloseHandler()\n                }}\n            >\n                <MenuItem onClick={() => {\n                    this.onProfileClicked();\n                    this.profileMenuHandleClose()\n                }}>View Profile</MenuItem>\n                <MenuItem onClick={() => {\n                    this.onLogOutClicked();\n                    this.profileMenuHandleClose()\n                }}>Kick User</MenuItem>\n\n                <MenuItem onClick={() => {\n                    this.onLogOutClicked();\n                    this.profileMenuHandleClose()\n                }}>Send Message</MenuItem>\n            </Menu>\n        )\n\n        return (\n            <Fragment>\n                <Navigation/>\n                <Grid container style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n                    <Button color=\"secondary\" variant=\"contained\">{this.state.chatRoom}</Button>\n                    <Button\n                        onClick={() => {\n                            this.leaveRoom();\n                        }}>Close</Button>\n\n                    <Grid container>\n                        <Grid style={{display: 'flex', flex: 0.2}}>\n                            <Paper style={Styles.leftPane}>\n                                <List component=\"ul\" style={{flex: 1}}>\n                                    {this.populateLeftPanel()}\n\n                                </List>\n                            </Paper>\n                            {renderChatUserMenu}\n                        </Grid>\n\n                        <Grid style={{display: 'flex', flex: 0.7}}>\n                            <Paper style={Styles.rightPane}>\n                                <Grid style={{\n                                    overflowY: 'auto',\n                                    padding: 10,\n                                    flexDirection: 'column',\n                                    height: '100%'\n                                }}>\n                                    <PopulateMessages/>\n                                    <div\n                                        ref={(el) => {\n                                            this.messageDiv = el;\n                                        }}>\n                                    </div>\n                                </Grid>\n\n                                <Grid style={{display: 'flex'}}>\n                                    <TextField\n                                        id=\"outlined-with-placeholder\"\n                                        placeholder=\"Type your message here\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        onChange={event => {\n                                            this.setState({\n                                                message: event.target.value\n                                            })\n                                        }\n                                        }\n                                        value={this.state.message}\n                                        onKeyPress={(ev) => {\n                                            if (ev.key === 'Enter') {\n                                                this.sendMessage();\n                                                ev.preventDefault();\n                                            }\n                                        }}\n                                        style={{flex: 1}}\n\n                                    />\n                                    <div style={{display: 'flex', alignItems: 'center'}}>\n\n                                        <Button variant=\"contained\"\n                                                size=\"large\"\n                                                color=\"primary\"\n                                                onClick={() => {\n                                                    this.sendMessage()\n                                                }}\n\n                                        >\n                                            Send\n                                        </Button>\n                                    </div>\n\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <ChatNavigation/>\n            </Fragment>\n        )\n    }\n\n    sendMessage() {\n        var clientRequest = {\n            actionType: \"message\",\n            sender: this.state.username,\n            message: this.state.message,\n            chatRoom: this.state.chatRoom,\n\n        }\n        this.socket.send(JSON.stringify(clientRequest))\n        this.setState({\n            message: ''\n        })\n    }\n}\n\nconst\n    Styles = {\n        leftPane: {\n            marginTop: 5,\n            padding: 10,\n            height: 500,\n            display: 'flex',\n            flex: 1,\n            overflowY: 'auto',\n\n\n        },\n        rightPane: {\n            marginTop: 5,\n            padding: 10,\n            height: 500,\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n\n\n        },\n\n    };\n\nconst mapStateToProps = state => {\n    return {\n        username: state.login.username,\n        password: state.login.password\n    }\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSocketInstance: (socketInstance) => dispatch(setSocketInstance(socketInstance)),\n\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Main);","import {\n    setSocketInstanceAction\n} from './SocketActionType'\n\n\nexport function setSocketInstance(socketInstance) {\n    return dispatch => {\n        dispatch(setSocketInstanceAction(socketInstance));\n    };\n}","import React, {Component, Fragment} from \"react\";\nimport {\n    Typography, ListItem, ListItemText, Button, Paper,\n} from \"@material-ui/core\"\n\nimport {Link} from \"react-router-dom\"\nimport {connect} from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport ChatNavigation from \"./ChatNavigation\"\n\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            chatRoomList: [\"aaa\", \"bbb\", \"cccc\", \"dddd\"]\n        }\n    }\n\n    renderChatRoomList() {\n        var listItems = [];\n        this.state.chatRoomList.map((data) => {\n                console.log(data)\n                listItems.push(\n                    <ListItem style={{display: 'flex', flex: 1, flexDirection: 'vertical'}}>\n                        <Link to={{pathname: '/main', chatRoom: data}}>\n                            <Button style={{display: 'flex', flex: 1, justifyContent: 'flex-start', textTransform: 'none'}}>\n                                <ListItemText\n                                    primary={data} style={{display: 'flex', flex: 1, justifyContent: 'flex-start'}}/>\n                            </Button>\n                        </Link>\n                    </ListItem>\n                )\n            }\n        )\n\n        return listItems;\n    }\n\n    render() {\n\n        return (\n            <Fragment>\n                <Navigation/>\n                <div>\n                    <Paper>\n                        <Typography variant={'h6'} style={{padding: 15}}>Chatrooms</Typography>\n                        {this.renderChatRoomList()}\n                    </Paper>\n                </div>\n                <ChatNavigation/>\n            </Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {}\n};\nconst mapDispatchToProps = dispatch => {\n    return {};\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n","import React, {Component} from 'react';\n\nimport {BrowserRouter, Route, Switch, Link} from \"react-router-dom\";\nimport {Provider} from 'react-redux'\nimport store from './Redux/Store'\nimport Login from './Login'\nimport Main from './Main'\nimport Home from './Home'\n\nexport default class App extends Component {\n\n    render() {\n        const Error = () => {\n            return <h1>Error Page</h1>\n        }\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path={\"/\"} exact component={Login}/>\n                        <Route path={\"/main\"} component={Main}/>\n                        <Route path={\"/home\"} component={Home}/>\n                        <Route component={Error}/>\n                    </Switch>\n                </BrowserRouter>\n            </Provider>\n        )\n\n    }\n}\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}